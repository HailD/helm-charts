global:
  # -- Default domain used by all components
  ## Used for ingresses, certificates, etc.
  domain: my-cache.local

# -- The number of cache pods to run.
replicaCount: 1

image:
  # -- Repository to use for the cache
  repository: ghcr.io/lavanet/lava/lavap
  # -- Image pull policy for the cache
  pullPolicy: IfNotPresent
  # -- Tag to use for the cache
  # @default -- `""` (defaults to Chart.appVersion)
  tag: ""

# -- Secrets with credentials to pull images from a private registry
imagePullSecrets: []
# -- Provide a name in place of release name
nameOverride: ""
# -- String to fully override `"cache.fullname"`
fullnameOverride: ""

serviceAccount:
  # -- specifies whether a service account should be created
  create: true
  # -- annotations to add to the service account
  annotations: {}
  # -- the name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations for the all deployed pods
podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Cache service type
  type: ClusterIP
  # -- Cache service port
  port: 20100

ingress:
  # -- Enable an ingress resource for the provider
  enabled: true
  # -- Defines which ingress controller will implement the resource
  className: "nginx"
  # -- Additional ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Cache hostname
  # @default -- `""` (defaults to global.domain)
  hostname: ""
  # -- Enable TLS configuration for the domain defined at `global.domain`
  ## TLS certificate will be retrieved from a TLS secret with name: `cache-tls`
  tls: true
  # -- The path to Provider
  path: /
  # -- Ingress path type. One of `Exact`, `Prefix` or `ImplementationSpecific`
  pathType: Prefix

# TLS certificate configuration via cert-manager
certificate:
  # -- Deploy a Certificate resource (requires cert-manager)
  enabled: false
  # -- Certificate primary domain (commonName)
  # @default -- `""` (defaults to global.domain)
  domain: ""
  # -- Certificate Subject Alternate Names (SANs)
  additionalHosts: []
  # -- The requested 'duration' (i.e. lifetime) of the certificate.
  # @default -- `""` (defaults to 2160h = 90d if not specified)
  ## Ref: <https://cert-manager.io/docs/usage/certificate/#renewal>
  duration: ""
  # -- How long before the expiry a certificate should be renewed.
  # @default -- `""` (defaults to 360h = 15d if not specified)
  ## Ref: <https://cert-manager.io/docs/usage/certificate/#renewal>
  renewBefore: ""
  # Certificate issuer
  ## Ref: <https://cert-manager.io/docs/concepts/issuer>
  issuer:
    # -- Certificate issuer group. Set if using an external issuer. Eg. `cert-manager.io`
    group: ""
    # -- Certificate issuer kind. Either `Issuer` or `ClusterIssuer`
    kind: ""
    # -- Certificate issuer name. Eg. `letsencrypt`
    name: ""
  # Private key of the certificate
  privateKey:
    # -- Rotation policy of private key when certificate is re-issued. Either: `Never` or `Always`
    rotationPolicy: Never
    # -- The private key cryptography standards (PKCS) encoding for private key. Either: `PCKS1` or `PKCS8`
    encoding: PKCS1
    # -- Algorithm used to generate certificate private key. One of: `RSA`, `Ed25519` or `ECDSA`
    algorithm: RSA
    # -- Key bit size of the private key. If algorithm is set to `Ed25519`, size is ignored.
    size: 2048
  # -- Annotations to be applied to the Server Certificate
  annotations: {}
  # -- Usages for the certificate
  ### Ref: <https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.KeyUsage>
  usages: []
  # -- Annotations that allow the certificate to be composed from data residing in existing Kubernetes Resources
  secretTemplateAnnotations: {}

# -- Resource limits and requests for the cache pods
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- [Node selector]
nodeSelector: {}

# -- [Tolerations] for use with node taints
tolerations: []

# -- Assign custom [affinity] rules to the deployment
affinity: {}

metrics:
  # -- Should enable prometheus metrics
  enabled: true
  # --  Metrics service port
  port: 20200
  serviceMonitor:
    # -- Enable a prometheus ServiceMonitor
    enabled: false
    # -- Prometheus ServiceMonitor interval
    interval: 30s
    # -- Prometheus [RelabelConfigs] to apply to samples before scraping
    relabelings: []
    # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion
    metricRelabelings: []
    # -- Prometheus ServiceMonitor selector
    selector: {}
      # prometheus: kube-prometheus

    # -- Prometheus ServiceMonitor scheme
    scheme: ""
    # -- Prometheus ServiceMonitor tlsConfig
    tlsConfig: {}
    # -- Prometheus ServiceMonitor namespace
    namespace: "" # "monitoring"
    # -- Prometheus ServiceMonitor labels
    additionalLabels: {}
    # -- Prometheus ServiceMonitor annotations
    annotations: {}

log:
  # -- Cache log level
  level: info
  # -- Cache log format, can be json or text
  format: json

# -- The expiration multiplier for items in the cache
expiration_multiplier:
# -- The expiration non finalized multiplier for items in the cache
expiration_non_finalized_multiplier:
# -- Max items allowed in the cache
max_items:
# -- Lavap cache additional CLI arguments
additionalArgs:
  # - --expiration-finalized-node-errors
  # - 250ms
