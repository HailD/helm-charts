replicaCount: 1

image:
  repository: ghcr.io/lavanet/lava/lavap
  pullPolicy: IfNotPresent
  # -- overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- specifies whether a service account should be created
  create: true
  # -- annotations to add to the service account
  annotations: {}
  # -- the name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 2200

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

metrics:
  # -- should enable prometheus metrics
  enabled: true
  # -- prometheus metrics address
  port: 3200
  serviceMonitor:
    enabled: false

log:
  # -- log level
  level: info
  # -- log format, can be json or text
  format: json

cache:
  # -- should add cache arg to provider
  enabled: true
  # -- cache address
  address: provider-cache:20100

# -- wallet name
wallet: "test"

# -- information about the private key to use for the node
key:
  # -- the kubernetes secret name containing the private key
  secretName: "wallet"
  # -- the key in the kubernetes secret to use
  secretKey: "key"
  # -- the kubernetes secret that contains the password for the private key
  passwordSecretName: "wallet"
  # -- the key in the kubernetes secret that contains the password for the private key
  passwordSecretKey: "password"

# -- provider keyring backend
keyringBackend: "test"
# -- lava node to connect to
node: https://testnet2-rpc.lavapro.xyz:443
# -- lava chain id
chainId: "lava-testnet-2"
# -- provider geo-location can be one of the [geolocations](https://docs.lavanet.xyz/provider-setup#geolocations)
geolocation: "2"

chains:
  lav1:
    # -- existing configuration secret name
    existingSecret: "provider-config"
    # -- existing configuration secret key
    existingSecretKey: "config.yml"

    persistence:
      # -- should create pvc for the provider data
      enabled: true
      accessModes:
        - "ReadWriteOnce"
      size: "8Gi"

    # -- list of interface to provide, only if existingSecret is empty
    # interfaces:
    #   - interface: rest
    #     nodes:
    #       - endpoint: rest.example.com
    #         type: full
    #       - endpoint: rest.archive.example.com
    #         type: archive
    #         skipVerifications: pruning
    #   - interface: tendermintrpc
    #     nodes:
    #       - endpoint: tendermintrpc.example.com
    #         type: full
    #       - endpoint: tendermintrpc.archive.example.com
    #         type: archive
    #         skipVerifications: pruning
    #   - interface: grpc
    #     nodes:
    #       - endpoint: grpc.example.com
    #         type: full
    #       - endpoint: grpc.archive.example.com
    #         type: archive
    #         skipVerifications: pruning
