# -- The number of provider pods to run.
replicaCount: 1

image:
  # -- Repository to use for the provider
  repository: ghcr.io/lavanet/lava/lavap
  # -- Image pull policy for the provider
  pullPolicy: IfNotPresent
  # -- Tag to use for the provider
  # @default -- `""` (defaults to Chart.appVersion)
  tag: ""

# -- Secrets with credentials to pull images from a private registry
imagePullSecrets: []
# -- Provide a name in place of release name
nameOverride: ""
# -- String to fully override `"provider.fullname"`
fullnameOverride: ""

serviceAccount:
  # -- specifies whether a service account should be created
  create: true
  # -- annotations to add to the service account
  annotations: {}
  # -- the name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations for the all deployed pods
podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Provider service type
  type: ClusterIP
  # -- Provider service port
  port: 2200

ingress:
  # -- Enable an ingress resource for the Provider
  enabled: false
  # -- Defines which ingress controller will implement the resource
  className: ""
  # -- Additional ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- Enable TLS configuration for the hostname
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource limits and requests for the provider pods
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- [Node selector]
nodeSelector: {}

# -- [Tolerations] for use with node taints
tolerations: []

# -- Assign custom [affinity] rules to the deployment
affinity: {}

metrics:
  # -- Should enable prometheus metrics
  enabled: true
  # --  Metrics service port
  port: 3200
  serviceMonitor:
    # -- Enable a prometheus ServiceMonitor
    enabled: false
    # -- Prometheus ServiceMonitor interval
    interval: 30s
    # -- Prometheus [RelabelConfigs] to apply to samples before scraping
    relabelings: []
    # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion
    metricRelabelings: []
    # -- Prometheus ServiceMonitor selector
    selector: {}
      # prometheus: kube-prometheus

    # -- Prometheus ServiceMonitor scheme
    scheme: ""
    # -- Prometheus ServiceMonitor tlsConfig
    tlsConfig: {}
    # -- Prometheus ServiceMonitor namespace
    namespace: "" # "monitoring"
    # -- Prometheus ServiceMonitor labels
    additionalLabels: {}
    # -- Prometheus ServiceMonitor annotations
    annotations: {}

log:
  # -- Provider log level
  level: info
  # -- Provider log format, can be json or text
  format: json

cache:
  # -- Enable provider cache supports
  enabled: true
  # -- Provider cache address
  address: provider-cache:20100

# -- Wallet name
wallet: "test"

# -- Information about the private key to use for the node
key:
  # -- The secret name containing the private key
  secretName: "wallet"
  # -- The key in the secret to use
  secretKey: "key"
  # -- The secret that contains the password for the private key
  passwordSecretName: "wallet"
  # -- The key in the secret that contains the password for the private key
  passwordSecretKey: "password"

# -- Provider keyring backend
keyringBackend: "test"
# -- Lava node to connect to
node: https://testnet2-rpc.lavapro.xyz:443
# -- Lava chain id
chainId: "lava-testnet-2"
# -- Provider geo-location can be one of the [geolocations](https://docs.lavanet.xyz/provider-setup#geolocations)
geolocation: "2"

# @ignored
chains:
  lav1:
    # -- Existing configuration secret name
    existingSecret: "provider-config"
    # -- Existing configuration secret key
    existingSecretKey: "config.yml"

    persistence:
      # -- Should create pvc for the provider data
      enabled: true
      accessModes:
        - "ReadWriteOnce"
      size: "2Gi"

    # -- list of interface to provide, only if existingSecret is empty
    # interfaces:
    #   - interface: rest
    #     nodes:
    #       - endpoint: rest.example.com
    #         type: full
    #       - endpoint: rest.archive.example.com
    #         type: archive
    #         skipVerifications: pruning
    #   - interface: tendermintrpc
    #     nodes:
    #       - endpoint: tendermintrpc.example.com
    #         type: full
    #       - endpoint: tendermintrpc.archive.example.com
    #         type: archive
    #         skipVerifications: pruning
    #   - interface: grpc
    #     nodes:
    #       - endpoint: grpc.example.com
    #         type: full
    #       - endpoint: grpc.archive.example.com
    #         type: archive
    #         skipVerifications: pruning
