# -- The number of consumer pods to run.
replicaCount: 1

image:
  # -- Repository to use for the consumer
  repository: ghcr.io/lavanet/lava/lavap
  # -- Image pull policy for the consumer
  pullPolicy: IfNotPresent
  # -- Tag to use for the consumer
  # @default -- `""` (defaults to Chart.appVersion)
  tag: ""

# -- Secrets with credentials to pull images from a private registry
imagePullSecrets: []
# -- Consumer a name in place of release name
nameOverride: ""
# -- String to fully override `"consumer.fullname"`
fullnameOverride: ""

serviceAccount:
  # -- specifies whether a service account should be created
  create: true
  # -- annotations to add to the service account
  annotations: {}
  # -- the name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations for the all deployed pods
podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Consumer pods service type
  type: ClusterIP

ingress:
  # -- Enable an ingress resource for the consumers
  enabled: true
  # -- Defines which ingress controller will implement the resource
  className: ""
  # -- Additional ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Consumer host
  domain: my-consumer.local
  # -- Enable TLS configuration for the hostname
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource limits and requests for the consumers pods
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- [Node selector]
nodeSelector: {}

# -- [Tolerations] for use with node taints
tolerations: []

# -- Assign custom [affinity] rules to the deployment
affinity: {}

log:
  # -- Consumer pod log level
  level: info
  # -- Consumer pod log format, can be json or text
  format: json

# -- Provider geo-location can be one of the [geolocations](https://docs.lavanet.xyz/provider-setup#geolocations)
geolocation: 2

# -- Lava node to connect to
node: https://testnet2-rpc.lavapro.xyz:443

# -- Lava chain id
chainId: lava-testnet-2

# -- Consumer keyring backend
keyringBackend: test

# -- Wallet name
wallet: test

key:
  # -- The kubernetes secret name containing the private key
  secretName: "wallet"
  # -- The key in the kubernetes secret to use
  secretKey: "key"
  # -- The kubernetes secret that contains the password for the private key
  passwordSecretName: "wallet"
  # -- The key in the kubernetes secret that contains the password for the private key
  passwordSecretKey: "password"

cache:
  # -- Should add cache arg
  enabled: true
  # -- Cache address
  address: cache:20100

# -- Should disable conflict transactions
disableConflictTransactions: true

# -- Address of the relay server
relayServerAddress:

# -- Address of the report server
reportsBeAddress:

metrics:
  # -- Should enable prometheus metrics
  enabled: true
  # -- Prometheus metrics address
  port: 9000
  serviceMonitor:
    # -- Enable a prometheus ServiceMonitor
    enabled: false
    # -- Prometheus ServiceMonitor interval
    interval: 30s
    # -- Prometheus [RelabelConfigs] to apply to samples before scraping
    relabelings: []
    # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion
    metricRelabelings: []
    # -- Prometheus ServiceMonitor selector
    selector: {}
      # prometheus: kube-prometheus

    # -- Prometheus ServiceMonitor scheme
    scheme: ""
    # -- Prometheus ServiceMonitor tlsConfig
    tlsConfig: {}
    # -- Prometheus ServiceMonitor namespace
    namespace: "" # "monitoring"
    # -- Prometheus ServiceMonitor labels
    additionalLabels: {}
    # -- Prometheus ServiceMonitor annotations
    annotations: {}

persistence:
  # -- Should create pvc for the consumer data
  enabled: true
  accessModes:
    - "ReadWriteOnce"
  size: "100Mi"

# @ignored
chains:
  lav1:
    default_interface: rest
    interfaces:
      - interface: rest
        port: 2020
      - interface: tendermintrpc
        port: 2021
      - interface: grpc
        port: 2022
