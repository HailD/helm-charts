replicaCount: 1

image:
  repository: ghcr.io/lavanet/lava/lavap
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

log:
  # -- log level
  level: warn
  # -- log format, can be json or text
  format: json

# -- provider geo-location can be one of the [geolocations](https://docs.lavanet.xyz/provider-setup#geolocations)
geolocation: 2

# -- lava node to connect to
node: https://testnet2-rpc.lavapro.xyz:443

# -- lava chain id
chainId: lava-testnet-2

# -- provider keyring backend
keyringBackend: test

# -- wallet name
wallet: test

key:
  # -- the kubernetes secret name containing the private key
  secretName: "wallet"
  # -- the key in the kubernetes secret to use
  secretKey: "key"
  # -- the kubernetes secret that contains the password for the private key
  passwordSecretName: "wallet"
  # -- the key in the kubernetes secret that contains the password for the private key
  passwordSecretKey: "password"

cache:
  # -- should add cache arg
  enabled: true
  # -- cache address
  address: cache:20100

# -- should disable conflict transactions
disableConflictTransactions: true

# -- address of the relay server
relayServerAddress:

# -- address of the report server
reportsBeAddress:

metrics:
  # -- should enable prometheus metrics
  enabled: true
  # -- prometheus metrics address
  port: 9000
  serviceMonitor:
    enabled: false

persistence:
  # -- should create pvc for the consumer data
  enabled: true
  accessModes:
    - "ReadWriteOnce"
  size: "100Mi"

chains:
  lav1:
    default_interface: rest
    interfaces:
      - interface: rest
        port: 2020
      - interface: tendermintrpc
        port: 2021
      - interface: grpc
        port: 2022
